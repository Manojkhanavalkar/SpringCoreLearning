<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:util="http://www.springframework.org/schema/util"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util.xsd"
>

<!-- standAlone List -->
<util:list list-class="java.util.LinkedList" id="mybestfriends">
	<value>Aman</value>
	<value>Ankit</value>
	<value>Manoj</value>
	<value>Amol</value>
	<value>Pankaj</value>
</util:list>

<!-- Standalone map-->
<util:map map-class="java.util.HashMap" id="fees">
	<entry key="Spring framework" value="8000" />
	<entry key="Django Framework" value="5000"/>
	<entry key="Hibernate framework" value="2000"/>
	
</util:map>
<!-- In this we have used standalone property it is simple to use standalone collections just give the id to a specific
collection and u are good to go -->
<util:properties id="dbconfig">
 <prop key="driver">com.mysql.jdbc.driver</prop>
 <prop key="username">Manoj</prop>
 <prop key="password">ManojTheDon</prop>
 <prop key="url">mysql:jdbc://localhost:3306/database</prop>
</util:properties>
<bean class="com.springcore.standalone.collections.Person" name="person1">
	<!-- <property name="friends">
		<ref bean="mybestfriends"/>
	</property>-->
	<property name="friends" ref="mybestfriends"/>
	<property name="feeStructure" ref="fees"/>
	<property name="properties" ref="dbconfig"/>
</bean>
</beans>